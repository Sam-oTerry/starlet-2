rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        (request.auth.token.email == 'admin@starletproperties.ug' || 
         request.auth.token.email == 'admin@starlet.co.ug');
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    function isValidDocument() {
      return request.resource.contentType.matches('application/pdf|application/msword|application/vnd.openxmlformats-officedocument.*') &&
             request.resource.size < 50 * 1024 * 1024; // 50MB limit
    }
    
    function isValidVideo() {
      return request.resource.contentType.matches('video/.*') &&
             request.resource.size < 100 * 1024 * 1024; // 100MB limit
    }

    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read: if true; // Public read for profile images
      allow write: if isOwner(userId) && isValidImage();
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // Listing images
    match /listings/{listingId}/images/{fileName} {
      allow read: if true; // Public read for listing images
      allow write: if isAuthenticated() && isValidImage();
      allow delete: if isAuthenticated() || isAdmin();
    }
    
    // Listing documents
    match /listings/{listingId}/documents/{fileName} {
      allow read: if true; // Public read for listing documents
      allow write: if isAuthenticated() && isValidDocument();
      allow delete: if isAuthenticated() || isAdmin();
    }
    
    // Store images
    match /stores/{storeId}/images/{fileName} {
      allow read: if true; // Public read for store images
      allow write: if isAuthenticated() && isValidImage();
      allow delete: if isAuthenticated() || isAdmin();
    }
    
    // Store documents
    match /stores/{storeId}/documents/{fileName} {
      allow read: if true; // Public read for store documents
      allow write: if isAuthenticated() && isValidDocument();
      allow delete: if isAuthenticated() || isAdmin();
    }
    
    // Chat attachments
    match /chat_uploads/{userId}/{fileName} {
      allow read: if isAuthenticated(); // Only authenticated users can read chat files
      allow write: if isOwner(userId) && 
                   (isValidImage() || isValidDocument() || isValidVideo());
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // General uploads
    match /uploads/{userId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && 
                   (isValidImage() || isValidDocument() || isValidVideo());
      allow delete: if isOwner(userId) || isAdmin();
    }
    
    // Admin uploads
    match /admin/{fileName} {
      allow read, write, delete: if isAdmin();
    }
    
    // Public assets (logos, icons, etc.)
    match /public/{fileName} {
      allow read: if true; // Public read access
      allow write, delete: if isAdmin(); // Only admins can modify public assets
    }
    
    // Default rule - deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
