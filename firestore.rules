rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // ========================================
    // HELPER FUNCTIONS
    // ========================================
    
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if user is the owner of a document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Check if user is an admin (multiple methods)
    function isAdmin() {
      return isAuthenticated() && (
        // Check admin emails
        request.auth.token.email == 'admin@starletproperties.ug' ||
        request.auth.token.email == 'admin@starlet.co.ug' ||
        // Check user role in database
        (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin')
      );
    }
    
    // ========================================
    // USERS COLLECTION
    // ========================================
    match /users/{userId} {
      // Allow reading user data for authenticated users (for messaging)
      allow read: if isAuthenticated();
      
      // Users can create their own profile during signup
      allow create: if isOwner(userId);
      
      // Users can update their own data
      allow update: if isOwner(userId);
      
      // Admins can update any user
      allow update: if isAdmin();
      
      // Only admins can delete users
      allow delete: if isAdmin();
      
      // ========================================
      // SAVED LISTINGS SUBCOLLECTION
      // ========================================
      match /savedListings/{listingId} {
        allow read, write: if isOwner(userId);
      }
      
      // ========================================
      // USER SETTINGS SUBCOLLECTION
      // ========================================
      match /settings/{settingId} {
        allow read, write: if isOwner(userId);
      }
      
      // ========================================
      // USER NOTIFICATIONS SUBCOLLECTION
      // ========================================
      match /notifications/{notificationId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // ========================================
    // LISTINGS COLLECTION
    // ========================================
    match /listings/{listingId} {
      // Anyone can read approved listings
      allow read: if resource.data.status == 'approved';
      
      // Users can read their own listings
      allow read: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can read all listings
      allow read: if isAdmin();
      
      // Authenticated users can create listings
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Users can update their own listings
      allow update: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can update any listing
      allow update: if isAdmin();
      
      // Users can delete their own listings
      allow delete: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can delete any listing
      allow delete: if isAdmin();
    }
    
    // ========================================
    // CONVERSATIONS COLLECTION
    // ========================================
    match /conversations/{conversationId} {
      // Allow reading conversations for authenticated users
      allow read: if isAuthenticated();
      
      // Authenticated users can create conversations
      allow create: if isAuthenticated();
      
      // Users can update conversations they're part of
      allow update: if isAuthenticated();
      
      // Admins can update any conversation
      allow update: if isAdmin();
      
      // Users can delete conversations they're part of
      allow delete: if isAuthenticated();
      
      // Admins can delete any conversation
      allow delete: if isAdmin();
      
      // ========================================
      // MESSAGES SUBCOLLECTION
      // ========================================
      match /messages/{messageId} {
        // Allow reading messages for authenticated users
        allow read: if isAuthenticated();
        
        // Authenticated users can create messages
        allow create: if isAuthenticated() && 
                     request.resource.data.senderId == request.auth.uid;
        
        // Users can update their own messages
        allow update: if isAuthenticated() && 
                     resource.data.senderId == request.auth.uid;
        
        // Admins can update any message
        allow update: if isAdmin();
        
        // Users can delete their own messages
        allow delete: if isAuthenticated() && 
                     resource.data.senderId == request.auth.uid;
        
        // Admins can delete any message
        allow delete: if isAdmin();
      }
      
      // ========================================
      // TYPING SUBCOLLECTION
      // ========================================
      match /typing/{userId} {
        // Allow reading typing status for authenticated users
        allow read: if isAuthenticated();
        
        // Users can update their own typing status
        allow write: if isAuthenticated() && 
                     request.auth.uid == userId;
        
        // Admins can read/write any typing status
        allow read, write: if isAdmin();
      }
    }
    
    // ========================================
    // STORES COLLECTION
    // ========================================
    match /stores/{storeId} {
      // Anyone can read approved stores
      allow read: if resource.data.status == 'approved';
      
      // Store owners can read their own stores
      allow read: if isAuthenticated() && 
                   resource.data.ownerId == request.auth.uid;
      
      // Admins can read all stores
      allow read: if isAdmin();
      
      // Authenticated users can create stores
      allow create: if isAuthenticated() && 
                   request.resource.data.ownerId == request.auth.uid;
      
      // Store owners can update their stores
      allow update: if isAuthenticated() && 
                   resource.data.ownerId == request.auth.uid;
      
      // Admins can update any store
      allow update: if isAdmin();
      
      // Store owners can delete their stores
      allow delete: if isAuthenticated() && 
                   resource.data.ownerId == request.auth.uid;
      
      // Admins can delete any store
      allow delete: if isAdmin();
    }
    
    // ========================================
    // AGENT STORES COLLECTION
    // ========================================
    match /agentStores/{storeId} {
      // Anyone can read approved agent stores
      allow read: if resource.data.status == 'approved';
      
      // Store owners can read their own stores
      allow read: if isAuthenticated() && 
                   resource.data.ownerId == request.auth.uid;
      
      // Admins can read all agent stores
      allow read: if isAdmin();
      
      // Authenticated users can create agent stores
      allow create: if isAuthenticated() && 
                   request.resource.data.ownerId == request.auth.uid;
      
      // Store owners can update their stores
      allow update: if isAuthenticated() && 
                   resource.data.ownerId == request.auth.uid;
      
      // Admins can update any agent store
      allow update: if isAdmin();
      
      // Store owners can delete their stores
      allow delete: if isAuthenticated() && 
                   resource.data.ownerId == request.auth.uid;
      
      // Admins can delete any agent store
      allow delete: if isAdmin();
    }
    
    // ========================================
    // NOTIFICATIONS COLLECTION
    // ========================================
    match /notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can read all notifications
      allow read: if isAdmin();
      
      // System can create notifications for users
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Users can update their own notifications
      allow update: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can update any notification
      allow update: if isAdmin();
      
      // Users can delete their own notifications
      allow delete: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can delete any notification
      allow delete: if isAdmin();
    }
    
    // ========================================
    // BROADCASTS COLLECTION
    // ========================================
    match /broadcasts/{broadcastId} {
      // Only admins can manage broadcasts
      allow read, write, delete: if isAdmin();
    }
    
    // ========================================
    // ADMIN SETTINGS COLLECTION
    // ========================================
    match /adminSettings/{settingId} {
      // Only admins can access admin settings
      allow read, write, delete: if isAdmin();
    }
    
    // ========================================
    // ANALYTICS COLLECTION
    // ========================================
    match /analytics/{analyticsId} {
      // Only admins can access analytics
      allow read, write, delete: if isAdmin();
    }
    
    // ========================================
    // MAIL COLLECTION (Firebase Extensions)
    // ========================================
    match /mail/{mailId} {
      // Only admins can send emails
      allow read, write, delete: if isAdmin();
    }
    
    // ========================================
    // EMAIL NOTIFICATIONS COLLECTION
    // ========================================
    match /emailNotifications/{notificationId} {
      // Only admins can manage email notifications
      allow read, write, delete: if isAdmin();
    }
    
    // ========================================
    // REVIEWS COLLECTION
    // ========================================
    match /reviews/{reviewId} {
      // Anyone can read approved reviews
      allow read: if resource.data.status == 'approved';
      
      // Users can read their own reviews
      allow read: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can read all reviews
      allow read: if isAdmin();
      
      // Authenticated users can create reviews
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Users can update their own reviews
      allow update: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can update any review
      allow update: if isAdmin();
      
      // Users can delete their own reviews
      allow delete: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can delete any review
      allow delete: if isAdmin();
    }
    
    // ========================================
    // INQUIRIES COLLECTION
    // ========================================
    match /inquiries/{inquiryId} {
      // Users can read their own inquiries
      allow read: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can read all inquiries
      allow read: if isAdmin();
      
      // Authenticated users can create inquiries
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Users can update their own inquiries
      allow update: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can update any inquiry
      allow update: if isAdmin();
      
      // Users can delete their own inquiries
      allow delete: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can delete any inquiry
      allow delete: if isAdmin();
    }
    
    // ========================================
    // FAVORITES COLLECTION
    // ========================================
    match /favorites/{favoriteId} {
      // Users can read their own favorites
      allow read: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can read all favorites
      allow read: if isAdmin();
      
      // Authenticated users can create favorites
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Users can update their own favorites
      allow update: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Users can delete their own favorites
      allow delete: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can delete any favorite
      allow delete: if isAdmin();
    }
    
    // ========================================
    // SEARCH HISTORY COLLECTION
    // ========================================
    match /searchHistory/{searchId} {
      // Users can read their own search history
      allow read: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can read all search history
      allow read: if isAdmin();
      
      // Authenticated users can create search history
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Users can update their own search history
      allow update: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Users can delete their own search history
      allow delete: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can delete any search history
      allow delete: if isAdmin();
    }
    
    // ========================================
    // ONLINE STATUS COLLECTION
    // ========================================
    match /onlineStatus/{userId} {
      // Allow reading online status for authenticated users
      allow read: if isAuthenticated();
      
      // Users can update their own online status
      allow write: if isAuthenticated() && 
                   request.auth.uid == userId;
      
      // Admins can read/write any online status
      allow read, write: if isAdmin();
    }
    
    // ========================================
    // TYPING STATUS COLLECTION
    // ========================================
    match /typingStatus/{conversationId} {
      // Allow reading typing status for authenticated users
      allow read: if isAuthenticated();
      
      // Allow updating typing status for authenticated users
      allow write: if isAuthenticated();
      
      // Admins can read/write any typing status
      allow read, write: if isAdmin();
    }
    
    // ========================================
    // PRESENCE COLLECTION (Online Status)
    // ========================================
    match /presence/{userId} {
      // Allow reading presence for authenticated users
      allow read: if isAuthenticated();
      
      // Users can update their own presence
      allow write: if isAuthenticated() && 
                   request.auth.uid == userId;
      
      // Admins can read/write any presence
      allow read, write: if isAdmin();
    }
    
    // ========================================
    // SUPPORT CHAT COLLECTION
    // ========================================
    match /supportChat/{chatId} {
      // Users can read their own support chats
      allow read: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can read all support chats
      allow read: if isAdmin();
      
      // Authenticated users can create support chats
      allow create: if isAuthenticated() && 
                   request.resource.data.userId == request.auth.uid;
      
      // Users can update their own support chats
      allow update: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can update any support chat
      allow update: if isAdmin();
      
      // Users can delete their own support chats
      allow delete: if isAuthenticated() && 
                   resource.data.userId == request.auth.uid;
      
      // Admins can delete any support chat
      allow delete: if isAdmin();
      
      // ========================================
      // SUPPORT MESSAGES SUBCOLLECTION
      // ========================================
      match /messages/{messageId} {
        // Users can read messages in their own support chats
        allow read: if isAuthenticated() && 
                     resource.data.userId == request.auth.uid;
        
        // Admins can read all support messages
        allow read: if isAdmin();
        
        // Authenticated users can create messages in their own support chats
        allow create: if isAuthenticated() && 
                     request.resource.data.userId == request.auth.uid;
        
        // Users can update their own messages
        allow update: if isAuthenticated() && 
                     resource.data.senderId == request.auth.uid;
        
        // Admins can update any support message
        allow update: if isAdmin();
        
        // Users can delete their own messages
        allow delete: if isAuthenticated() && 
                     resource.data.senderId == request.auth.uid;
        
        // Admins can delete any support message
        allow delete: if isAdmin();
      }
    }
    
    // ========================================
    // DEFAULT RULE - DENY ALL OTHER ACCESS
    // ========================================
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 